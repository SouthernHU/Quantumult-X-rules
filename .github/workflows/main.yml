# 工作流的名称
name: Merge Multiple QuantumultX Rulesets

# 触发工作流的事件
on:
  # 1. 定时触发：使用 cron 语法
  #    '0 18 * * *' 表示每天 UTC 时间 18:00 运行
  #    (北京时间凌晨 2:00)
  schedule:
    - cron: '0 18 * * *'

  # 2. 手动触发
  workflow_dispatch:

# 定义工作流中的任务
jobs:
  merge_rules:
    # 运行此任务的虚拟机环境
    runs-on: ubuntu-latest

    # 任务包含的步骤
    steps:
      # 第一步：检出（Checkout）你的仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：合并APP广告规则 (APP_ADBlock.conf)
      - name: Merge rules for APP_ADBlock.conf
        run: |
          # --- 第 1 组：定义要合并到 file1.conf 的 URL 列表 ---
          # !!! 这是你需要修改的地方 !!!
          URLS_GROUP1=(
            # 12306
            "https://raw.githubusercontent.com/ddgksf2013/Scripts/master/12306.js"
            # 微信小程序
            "https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/AdBlock/Applet.conf"
            # 微博
            "https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/AdBlock/WeiboAds.conf"
          )

          # 定义第 1 组的输出文件名
          OUTPUT_FILE_1="APP_ADBlock.conf"

          # 创建或清空文件，并添加文件头
          echo "# Ruleset for File 1" > $OUTPUT_FILE_1
          echo "# Generated at $(date -u)" >> $OUTPUT_FILE_1
          echo "" >> $OUTPUT_FILE_1

          # 循环遍历 URL 列表，下载内容并追加
          for url in "${URLS_GROUP1[@]}"
          do
            echo "  -> Adding $url to $OUTPUT_FILE_1"
            echo "" >> $OUTPUT_FILE_1
            echo "# From: $url" >> $OUTPUT_FILE_1
            curl -sSL "$url" >> $OUTPUT_FILE_1
          done
          
          echo "Finished merging rules for $OUTPUT_FILE_1"

      # 第三步：合并第二组规则 (file2.conf)
      - name: Merge rules for Enhance.conf
        run: |
          # --- 第 2 组：定义要合并到 file2.conf 的 URL 列表 ---
          # !!! 这是你需要修改的地方 !!!
          URLS_GROUP2=(
            # Google 人机验证
            "https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/Snippet/GoogleCAPTCHA.snippet"
          )

          # 定义第 2 组的输出文件名
          OUTPUT_FILE_2="file2.conf"

          # 创建或清空文件，并添加文件头
          echo "# Ruleset for File 2" > $OUTPUT_FILE_2
          echo "# Generated at $(date -u)" >> $OUTPUT_FILE_2
          echo "" >> $OUTPUT_FILE_2

          # 循环遍历 URL 列表，下载内容并追加
          for url in "${URLS_GROUP2[@]}"
          do
            echo "  -> Adding $url to $OUTPUT_FILE_2"
            echo "" >> $OUTPUT_FILE_2
            echo "# From: $url" >> $OUTPUT_FILE_2
            curl -sSL "$url" >> $OUTPUT_FILE_2
          done
          
          echo "Finished merging rules for $OUTPUT_FILE_2"
      
      # 如果需要合并更多文件，可以复制上面的 "Merge rules for ..." 步骤块并修改
      
      # 第四步：提交所有变动并推送到仓库
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          if [[ -n $(git status -s) ]]; then
            # 'git add .' 会添加所有变动的文件，包括 file1.conf 和 file2.conf
            git add .
            git commit -m "feat: Auto-update QuantumultX rules on $(date)"
            git push
            echo "Changes pushed to repository."
          else
            echo "No changes detected. Nothing to commit."
          fi
