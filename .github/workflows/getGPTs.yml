# GitHub Actions 工作流名称
name: Convert Proxy Rules for Quantumult X

# 工作流触发条件
on:
  # 1. 允许手动触发
  workflow_dispatch:

  # 2. 定时触发：使用 CRON 表达式
  # 下面的例子是每天 UTC 时间 0 点（北京时间早上 8 点）执行一次
  # 您可以访问 https://crontab.guru/ 来生成你想要的时间
  schedule:
    - cron: '0 0 * * *'
# 任务
jobs:
  build:
    # 运行环境
    runs-on: ubuntu-latest
    permissions:
        contents: write
    # 步骤
    steps:
      # 第一步：检出你的仓库代码，这样才能提交文件
      - name: Checkout
        uses: actions/checkout@v4

      # 第二步：下载、转换并保存规则文件
      - name: Get and Convert Rules
        run: |
          mkdir -p rules
          
          # 下载原始规则文件，然后进行转换
          # 1. curl -sL 下载文件
          # 2. sed 命令进行多重替换：
          #    -e 's/^RULE_TYPE,/new_rule_type,/'  <- 替换规则类型
          #    ...
          #    -e 's/$/,proxy/'  <- ❗❗❗ 核心改动：在每一行末尾追加策略 ",proxy"
          curl -sL "https://github.com/SouthernHU/proxyRules/raw/refs/heads/main/behavior_classical/GPTs.list" | \
          sed \
            -e 's/^DOMAIN-SUFFIX,/host-suffix,/' \
            -e 's/^DOMAIN,/host,/' \
            -e 's/^DOMAIN-KEYWORD,/host-keyword,/' \
            -e 's/^IP-CIDR,/ip-cidr,/' \
            -e 's/$/,proxy/' \
          > GPTs.list

      # 第三步：提交并推送到你的仓库
      - name: Commit and Push
        run: |
          # 配置 Git 用户信息
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 将所有变动（新增或修改的文件）添加到暂存区
          git add .
          
          # 检查是否有变动。如果有，则提交并推送。
          # '|| exit 0' 的作用是：如果没有变动，git commit 会失败，但这并非错误，所以我们让脚本正常退出。
          git commit -m "chore: auto-update rules by GitHub Actions" || exit 0
          
          # 推送到主分支
          git push
